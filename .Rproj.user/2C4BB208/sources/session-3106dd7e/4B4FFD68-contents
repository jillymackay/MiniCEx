---
title: "MiniCEx Audit Report V3 (2023-2024)"
author: "Jill MacKay"
date: "`r Sys.Date()`"
output:
  html_document: default
  word_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.height = 6, fig.width = 10, warning = FALSE, message = FALSE)


library(tidyverse)
library(minicexpack)
library(knitr)
library(flextable)


fil <- file.path("C:\\Users\\jmackay4\\Documents\\data\\Mini CEx Local Mirror\\FY MiniCE 2023_2024.xlsx")
yl <- file.path("//cmvm.datastore.ed.ac.uk/cmvm/eb/users/jmackay4/Operational/yearlist2324.csv")

date_of_data <- file.info(fil)$ctime

WeekNumberRequirement <- mcex_weekn("20230605")


dat <- mcex_read(fil)



stuTasks <- mcex_tasks(dat)


stuTasksLong <- mcex_longtasks(dat)


notEnoughTasks <- mcex_enoughtasks(dat, WeekNumberRequirement)



dateTasks <- mcex_datetasks(dat)

dateTasksLong <- mcex_longdatetasks(dat)

yearlist <- read.csv(yl) %>% 
  select(-X)


```

# About this document
This is a working document. This is version 2 of the AY 2023-2024 MiniCEx report. This document should be generated at least weekly by Jill MacKay for the final year team prior to creation of an app which will allow report to be generated at will. 

*Changes:* Further use of minicex_pack to do background data processing. Removed Inglis table as that is separate report now





# Notes
## Date of file read: 

This MiniCEx analysis was run on data from `r toString(date_of_data)`



# Students who have not contributed MiniCEx

```{r}

yearlist %>% 
  filter(!yearlist$matric %in% dat$matric) %>% 
  kable(caption = "Students who are in the year list provided by Sally date 18th May but have not contributed MiniCEx data so far",
        col.names = c("Matric", "Name"))

```


# Students who have not contributed required number of MiniCEx

This list of student will underestimate the number of contributions required as a 4 week buffer is given to account for the free choice block and 4 weeks are excluded because of the summer break.

The required number of tasks is `r toString(round(WeekNumberRequirement),1)`


```{r}



 notEnoughTasks %>% 
   kable (caption = "Students who have completed fewer than the required number of tasks",
          col.names = c("Matriculation Number", "Total Tasks"))

```



# The distribution of task type by date


```{r}

mcexplot_datetasks(dat)


```


# The species used for miniCEx per student

``` {r}

mcexplot_tasks(dat, matric, Spp)
 
#   mutate(MatricSuffix = as.numeric(str_sub(matric, 5,8))) %>% 
#   filter(MatricSuffix > 2500) %>% 
#   ggplot( aes(x=matric, y=taskCounter, fill = Spp)) + 
#   geom_bar(stat = "identity") +
#   theme(axis.text.x = element_text(angle = 90), legend.position = 'bottom')
# 
# dat %>% 
#   mutate(MatricSuffix = as.numeric(str_sub(matric, 5,8))) %>% 
#   filter(MatricSuffix >= 2500 & MatricSuffix < 4700) %>%   
#   ggplot( aes(x=matric, y=taskCounter, fill = Spp)) + 
#   geom_bar(stat = "identity") +
#   theme(axis.text.x = element_text(angle = 90), legend.position = 'bottom')
# 
# dat %>% 
#   mutate(MatricSuffix = as.numeric(str_sub(matric, 5,8))) %>% 
#   filter(MatricSuffix > 4700) %>%   
#   ggplot( aes(x=matric, y=taskCounter, fill = Spp)) + 
#   geom_bar(stat = "identity") +
#   theme(axis.text.x = element_text(angle = 90), legend.position = 'bottom')

```





# The species logged per week


``` {r}

mcexplot_tasks(dat, week, Spp)



```

# Overall performance marks by date

``` {r}


mcexplot_tasks(dat, week, OverallAssessorFeedback)


```


# Overall performance by species and date



```{r}


mcexplot_facettasks(dat, week, OverallAssessorFeedback, Spp)


mcexplot_tasks(dat, Spp, OverallAssessorFeedback) +
  labs(title = "Overall feedback by species")

```




# Students who have performed at below expected level



``` {r, echo = FALSE, warning = FALSE, message= FALSE}




# dat %>% 
#   filter(OverallAssessorFeedback == "Below expected level") %>% 
#   group_by(matric) %>% 
#   nest(StudentName) %>% 
#   unnest_wider(col = data, names_sep =" ") %>% 
#   select(rowID, matric, `data StudentName`, MainTask, Assessor, DateOfTask) %>%  
#   arrange(DateOfTask, matric)  %>% 
#   flextable() %>% 
#   set_caption("Students who performed below expected level, the task and the assessor\n
#               New students at the bottom")
  
```


# Trustability scores per student


```{r}

mcexplot_tasks(dat, matric,OverallAssessorFeedback)



# dat %>% 
#   mutate(MatricSuffix = as.numeric(str_sub(matric, 5,8))) %>% 
#   filter(MatricSuffix < 1200) %>% 
#   ggplot( aes(x=matric, y=taskCounter, fill = OverallAssessorFeedback)) + 
#   geom_bar(stat = "identity") +
#   theme(axis.text.x = element_text(angle = 90), legend.position = 'bottom')
# 
# 
# dat %>% 
#   mutate(MatricSuffix = as.numeric(str_sub(matric, 5,8))) %>% 
#   filter(MatricSuffix >= 1200 & MatricSuffix <= 2500) %>% 
#   ggplot( aes(x=matric, y=taskCounter, fill = OverallAssessorFeedback)) + 
#   geom_bar(stat = "identity") +
#   theme(axis.text.x = element_text(angle = 90), legend.position = 'bottom')
# 
# dat %>% 
#   mutate(MatricSuffix = as.numeric(str_sub(matric, 5,8))) %>% 
#   filter(MatricSuffix > 2500 & MatricSuffix < 4700) %>%   
#   ggplot( aes(x=matric, y=taskCounter, fill = OverallAssessorFeedback)) + 
#   geom_bar(stat = "identity") +
#   theme(axis.text.x = element_text(angle = 90), legend.position = 'bottom')
# 
# dat %>% 
#   mutate(MatricSuffix = as.numeric(str_sub(matric, 5,8))) %>% 
#   filter(MatricSuffix > 4700) %>%   
#   ggplot( aes(x=matric, y=taskCounter, fill = OverallAssessorFeedback)) + 
#   geom_bar(stat = "identity") +
#   theme(axis.text.x = element_text(angle = 90), legend.position = 'bottom')


```


# Entrustability by Task


```{r}
dat %>% 
  group_by(matric) %>% 
  nest(StudentName) %>% 
  unnest_wider(col = data, names_sep =" ") %>% 
  ungroup() %>% 
  select(rowID, matric, Spp, taskCounter,
         c(Organisation:OverallAssessorFeedback), 
         c(ClinicalExam:Other)) %>% 
  pivot_longer(cols = -c(rowID, matric, Spp, taskCounter, Organisation:OverallAssessorFeedback),
               names_to = "Task",
               values_to = "T/F") %>% 
  filter(`T/F` == TRUE) %>% 
  select(-`T/F`) %>% 
  pivot_longer(cols = -c(rowID, matric, Spp, taskCounter, Task),
               names_to = "Feedback",
               values_to = "Score") %>% 
  filter(!is.na(Score),
         Feedback != "OverallAssessorFeedback") %>% 
  ggplot(aes(x = Feedback, y = Score, fill = Score)) +
  geom_bar(stat = "identity") +
  facet_wrap(facets = ~ Task) +
  theme(axis.text.x = element_text(angle = 90), 
        legend.position = 'bottom',
        axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank())



```


# Overall feedback by Task


```{r}

dat %>% 
  group_by(matric) %>% 
  nest(StudentName) %>% 
  unnest_wider(col = data, names_sep =" ") %>% 
  ungroup() %>% 
  select(rowID, matric, Spp, taskCounter, Organisation:OverallAssessorFeedback, ClinicalExam:Other) %>% 
  pivot_longer(cols = -c(rowID, matric, Spp, taskCounter,
                         c(Organisation:OverallAssessorFeedback)),
               names_to = "Task",
               values_to = "T/F") %>% 
  filter(`T/F` == TRUE) %>% 
  select(-`T/F`) %>% 
  pivot_longer(cols = -c(rowID, matric, Spp, taskCounter, Task),
               names_to = "Feedback",
               values_to = "Score") %>% 
  filter(!is.na(Score),
         Feedback == "OverallAssessorFeedback") %>% 
  ggplot(aes(x = Feedback, y = Score, fill = Score)) +
  geom_bar(stat = "identity") +
  facet_wrap(facets = ~ Task) +
  theme(axis.text.x = element_text(angle = 90), 
        legend.position = 'bottom',
        axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank())

```



# Students with no surgery task

TBD with more students


```{r}
SurgList <- dat %>% 
  select(matric, StudentName, SurgTx) %>% 
  filter(SurgTx == TRUE) %>%
  unique()
  

yearlist %>%
   filter(!(yearlist$matric %in% SurgList$matric)) %>% 
   kable(caption = "Students present in year list from Sally date 18th May but have no surgical task yet",
         col.names = c("Matric", "Name"))


```


# Students with less than 2 Inglis tasks

Now delivered in separate report



# Rotations


```{r}
dat %>% 
  tabyl(Rotation) %>% 
  flextable() %>% 
  set_caption("Number and percentage of rotations")

```



